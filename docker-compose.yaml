version: '3'

services:
  db:
    image: postgres
    container_name: aip-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - aip_db:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - aip_net
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}']

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aip-backend
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST_DOCKER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - '127.0.0.1:9000:9000'
    volumes:
      - ./src:/app/src
    networks:
      - aip_net
    depends_on:
      db:
        condition: service_healthy

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: aip-pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
    ports:
      - '127.0.0.1:5050:80'
    networks:
      - aip_net
    depends_on:
      - db

volumes:
  aip_db:
    name: aip_db

networks:
  aip_net:
    name: aip_net
